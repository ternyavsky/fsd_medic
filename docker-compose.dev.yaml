version: "3.8"
services:
  redis:
    container_name: fsd_medic.redis
    image: redis:alpine
    expose:
      - "6379"
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  memcached:
    container_name: fsd_medic.memcached
    image: memcached:latest
    ports:
      - "11211:11211"
        #  mysql:
        #    container_name: fsd_medic.mysql
        # image: mysql
        # ports:
        # - "3306:3306"
        # environment:
        # MYSQL_ROOT_PASSWORD: root
        #  MYSQL_DATABASE: mysql
        # MYSQL_PASSWORD: root
        # volumes:
        # - ./dbdata:/var/lib/mysql
        # - ./default_db.sql:/docker-entrypoint-initdb.d/default_db.sql
  # prometheus:
  #   container_name: fsd_medic.prometheus
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yaml:/etc/prometheus/prometheus.yaml

  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yaml'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  # grafana:
  #   container_name: fsd_medic.grafana
  #   image: grafana/grafana
  #   volumes:
  #     - grafana_storage:/var/lib/grafana
  #   ports:
  #     - "3000:3000"


  # loki:
  #   container_name: fsd_medic.loki
  #   image: grafana/loki
  #   ports:
  #     - "3100:3100"
  #   restart: unless-stopped

  celery:
    build: .
    container_name: fsd_medic.celery
    command: celery -A fsd_medic worker --loglevel=info


  rabbitmq:
    container_name: fsd_medic.rabbitmq
    image: rabbitmq
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running -q" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 10s



volumes:
  dbdata:
  grafana_storage: {}
