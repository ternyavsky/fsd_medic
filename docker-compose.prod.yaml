version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name:
      fsd_medic.app
      #command:  bash -c "gunicorn fsd_medic.asgi:application --bind 0.0.0.0:8000  -k uvicorn.workers.UvicornWorker"
    command: "uvicorn --factory fsd_medic.wsgi:application --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    restart: always
    links:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:8000/healthcheck"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  redis:
    container_name: fsd_medic.redis
    image: dockerhub.timeweb.cloud/redis:alpine
    ports:
      - "6379:6379"
  memcached:
    container_name: fsd_medic.memcached
    image: dockerhub.timeweb.cloud/memcached:latest
    ports:
      - "11211:11211"
  prometheus:
    container_name: fsd_medic.prometheus
    image: dockerhub.timeweb.cloud/prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
  grafana:
    container_name: fsd_medic.grafana
    volumes:
      - grafana_storage:/var/lib/grafana
    image: dockerhub.timeweb.cloud/grafana/grafana
    ports:
      - "3000:3000"
  # mysql:
  #   container_name: fsd_medic.mysql
  #   image: mysql
  #   ports:
  #       - "3306:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: mysql
  #     MYSQL_PASSWORD: root
  #   volumes:
  #     - ./dbdata:/var/lib/mysql/
  #     - ./default_db.sql:/docker-entrypoint-initdb.d/default_db.sql

  loki:
    container_name: fsd_medic.loki
    image: dockerhub.timeweb.cloud/grafana/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
  celery:
    build: .
    container_name: fsd_medic.celery
    restart: always
    command: celery -A fsd_medic worker --loglevel=info

  rabbitmq:
    container_name: fsd_medic.rabbitmq
    image: dockerhub.timeweb.cloud/rabbitmq:3.13.2-management
    restart: always
    # environment:
    #   - RABBITMQ_DEFAULT_USER=guest
    #   - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    # healthcheck:
    #   test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running -q" ]
    #   interval: 30s
    #   timeout: 60s
    #   retries: 5
    #   start_period: 10s
#db:
#   image: mysql
#   restart: always
#   ports:
#     - '3307:3306'
#   environment:

#     - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
volumes:
  # dbdata:
  grafana_storage: {}
